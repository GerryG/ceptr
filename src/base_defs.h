/**
 * @ingroup def
 *
 * @file base_defs.h
 * @brief auto-generated system definitions
 *
 * NOTE: this file is auto-generated by base_defs.pl
 *
 * @copyright Copyright (C) 2013-2015, The MetaCurrency Project (Eric Harris-Braun, Arthur Brock, et. al).  This file is part of the Ceptr platform and is released under the terms of the license contained in the file LICENSE (GPLv3).
 */

#ifndef _CEPTR_BASE_DEFS_H
#define _CEPTR_BASE_DEFS_H
#include "sys_defs.h"

void base_defs();

enum SYSSymbolIDs {
    NULL_SYMBOL_ID,
    DEFINITIONS_ID,
    STRUCTURES_ID,
    STRUCTURE_DEFINITION_ID,
    STRUCTURE_LABEL_ID,
    STRUCTURE_PARTS_ID,
    STRUCTURE_PART_ID,
    SYMBOLS_ID,
    SYMBOL_DECLARATION_ID,
    SYMBOL_STRUCTURE_ID,
    SYMBOL_LABEL_ID,
    BOOLEAN_ID,
    SEMTREX_MATCH_PATH_ID,
    SEMTREX_SYMBOL_LITERAL_ID,
    SEMTREX_SYMBOL_LITERAL_NOT_ID,
    SEMTREX_SYMBOL_SET_ID,
    SEMTREX_SYMBOL_ID,
    SEMTREX_SEQUENCE_ID,
    SEMTREX_OR_ID,
    SEMTREX_NOT_ID,
    SEMTREX_SYMBOL_ANY_ID,
    SEMTREX_ZERO_OR_MORE_ID,
    SEMTREX_ONE_OR_MORE_ID,
    SEMTREX_ZERO_OR_ONE_ID,
    SEMTREX_VALUE_LITERAL_ID,
    SEMTREX_VALUE_LITERAL_NOT_ID,
    SEMTREX_VALUE_SET_ID,
    SEMTREX_GROUP_ID,
    SEMTREX_DESCEND_ID,
    SEMTREX_WALK_ID,
    SEMTREX_MATCH_ID,
    SEMTREX_MATCH_CURSOR_ID,
    SEMTREX_MATCH_RESULTS_ID,
    SEMTREX_MATCH_SYMBOL_ID,
    SEMTREX_MATCH_SIBLINGS_COUNT_ID,
    ASCII_CHAR_ID,
    ASCII_CHARS_ID,
    RECEPTOR_XADDR_ID,
    FLUX_ID,
    SCAPE_SPEC_ID,
    ASPECTS_ID,
    ASPECT_DEF_ID,
    ASPECT_TYPE_ID,
    CARRIER_ID,
    ASPECT_ID,
    SIGNALS_ID,
    SIGNAL_ID,
    ENVELOPE_ID,
    BODY_ID,
    LISTENERS_ID,
    LISTENER_ID,
    EXPECTATION_ID,
    ACTION_ID,
    INTERPOLATE_SYMBOL_ID,
    PROCESSES_ID,
    PROCESS_CODING_ID,
    PROCESS_NAME_ID,
    PROCESS_INTENTION_ID,
    INPUT_ID,
    INPUT_SIGNATURE_ID,
    INPUT_LABEL_ID,
    SIGNATURE_STRUCTURE_ID,
    OUTPUT_SIGNATURE_ID,
    RUN_TREE_ID,
    PARAM_REF_ID,
    PARAMS_ID,
    RESULT_SYMBOL_ID,
    REDUCTION_ERROR_SYMBOL_ID,
    PROTOCOLS_ID,
    SEQUENCES_ID,
    STEP_SYMBOL_ID,
    STEPS_ID,
    INTERACTIONS_ID,
    INTERACTION_ID,
    STEP_ID,
    RESPONSE_STEPS_ID,
    SCAPES_ID,
    VM_HOST_RECEPTOR_ID,
    CLOCK_RECEPTOR_ID,
    COMPOSITORY_ID,
    MANIFEST_ID,
    MANIFEST_PAIR_ID,
    MANIFEST_LABEL_ID,
    MANIFEST_SPEC_ID,
    RECEPTOR_PACKAGE_ID,
    RECEPTOR_IDENTIFIER_ID,
    INSTALLED_RECEPTOR_ID,
    ACTIVE_RECEPTORS_ID,
    PENDING_SIGNALS_ID,
    BINDINGS_ID,
    BINDING_PAIR_ID,
    YEAR_ID,
    MONTH_ID,
    DAY_ID,
    HOUR_ID,
    MINUTE_ID,
    SECOND_ID,
    TODAY_ID,
    NOW_ID,
    TICK_ID,
    ERROR_LOCATION_ID,
    ZERO_DIVIDE_ERR_ID,
    TOO_FEW_PARAMS_ERR_ID,
    TOO_MANY_PARAMS_ERR_ID,
    SIGNATURE_MISMATCH_ERR_ID,
    NOT_A_PROCESS_ERR_ID,
    NOT_IN_SIGNAL_CONTEXT_ERR_ID,
    INCOMPATIBLE_TYPE_ERR_ID,
    UNIX_ERRNO_ERR_ID,
    STX_TOKENS_ID,
    STX_SL_ID,
    STX_OP_ID,
    STX_CP_ID,
    STX_SET_ID,
    STX_OS_ID,
    STX_CS_ID,
    STX_LABEL_ID,
    STX_OG_ID,
    STX_CG_ID,
    STX_EQ_ID,
    STX_NEQ_ID,
    STX_WALK_ID,
    STX_STAR_ID,
    STX_PLUS_ID,
    STX_Q_ID,
    STX_OR_ID,
    STX_COMMA_ID,
    STX_EXCEPT_ID,
    STX_NOT_ID,
    STX_VAL_S_ID,
    STX_VAL_C_ID,
    STX_VAL_I_ID,
    STX_VAL_F_ID,
    STX_SIBS_ID,
    STX_CHILD_ID,
    STX_POSTFIX_ID,
    TREE_DELTA_PATH_ID,
    TREE_DELTA_VALUE_ID,
    TREE_DELTA_COUNT_ID,
    TREE_DELTA_ADD_ID,
    TREE_DELTA_REPLACE_ID,
    NUM_SYS_SYMBOLS
};
#define DEFINITIONS G_contexts[SYS_CONTEXT].symbols[DEFINITIONS_ID]
#define STRUCTURES G_contexts[SYS_CONTEXT].symbols[STRUCTURES_ID]
#define STRUCTURE_DEFINITION G_contexts[SYS_CONTEXT].symbols[STRUCTURE_DEFINITION_ID]
#define STRUCTURE_LABEL G_contexts[SYS_CONTEXT].symbols[STRUCTURE_LABEL_ID]
#define STRUCTURE_PARTS G_contexts[SYS_CONTEXT].symbols[STRUCTURE_PARTS_ID]
#define STRUCTURE_PART G_contexts[SYS_CONTEXT].symbols[STRUCTURE_PART_ID]
#define SYMBOLS G_contexts[SYS_CONTEXT].symbols[SYMBOLS_ID]
#define SYMBOL_DECLARATION G_contexts[SYS_CONTEXT].symbols[SYMBOL_DECLARATION_ID]
#define SYMBOL_STRUCTURE G_contexts[SYS_CONTEXT].symbols[SYMBOL_STRUCTURE_ID]
#define SYMBOL_LABEL G_contexts[SYS_CONTEXT].symbols[SYMBOL_LABEL_ID]
#define BOOLEAN G_contexts[SYS_CONTEXT].symbols[BOOLEAN_ID]
#define SEMTREX_MATCH_PATH G_contexts[SYS_CONTEXT].symbols[SEMTREX_MATCH_PATH_ID]
#define SEMTREX_SYMBOL_LITERAL G_contexts[SYS_CONTEXT].symbols[SEMTREX_SYMBOL_LITERAL_ID]
#define SEMTREX_SYMBOL_LITERAL_NOT G_contexts[SYS_CONTEXT].symbols[SEMTREX_SYMBOL_LITERAL_NOT_ID]
#define SEMTREX_SYMBOL_SET G_contexts[SYS_CONTEXT].symbols[SEMTREX_SYMBOL_SET_ID]
#define SEMTREX_SYMBOL G_contexts[SYS_CONTEXT].symbols[SEMTREX_SYMBOL_ID]
#define SEMTREX_SEQUENCE G_contexts[SYS_CONTEXT].symbols[SEMTREX_SEQUENCE_ID]
#define SEMTREX_OR G_contexts[SYS_CONTEXT].symbols[SEMTREX_OR_ID]
#define SEMTREX_NOT G_contexts[SYS_CONTEXT].symbols[SEMTREX_NOT_ID]
#define SEMTREX_SYMBOL_ANY G_contexts[SYS_CONTEXT].symbols[SEMTREX_SYMBOL_ANY_ID]
#define SEMTREX_ZERO_OR_MORE G_contexts[SYS_CONTEXT].symbols[SEMTREX_ZERO_OR_MORE_ID]
#define SEMTREX_ONE_OR_MORE G_contexts[SYS_CONTEXT].symbols[SEMTREX_ONE_OR_MORE_ID]
#define SEMTREX_ZERO_OR_ONE G_contexts[SYS_CONTEXT].symbols[SEMTREX_ZERO_OR_ONE_ID]
#define SEMTREX_VALUE_LITERAL G_contexts[SYS_CONTEXT].symbols[SEMTREX_VALUE_LITERAL_ID]
#define SEMTREX_VALUE_LITERAL_NOT G_contexts[SYS_CONTEXT].symbols[SEMTREX_VALUE_LITERAL_NOT_ID]
#define SEMTREX_VALUE_SET G_contexts[SYS_CONTEXT].symbols[SEMTREX_VALUE_SET_ID]
#define SEMTREX_GROUP G_contexts[SYS_CONTEXT].symbols[SEMTREX_GROUP_ID]
#define SEMTREX_DESCEND G_contexts[SYS_CONTEXT].symbols[SEMTREX_DESCEND_ID]
#define SEMTREX_WALK G_contexts[SYS_CONTEXT].symbols[SEMTREX_WALK_ID]
#define SEMTREX_MATCH G_contexts[SYS_CONTEXT].symbols[SEMTREX_MATCH_ID]
#define SEMTREX_MATCH_CURSOR G_contexts[SYS_CONTEXT].symbols[SEMTREX_MATCH_CURSOR_ID]
#define SEMTREX_MATCH_RESULTS G_contexts[SYS_CONTEXT].symbols[SEMTREX_MATCH_RESULTS_ID]
#define SEMTREX_MATCH_SYMBOL G_contexts[SYS_CONTEXT].symbols[SEMTREX_MATCH_SYMBOL_ID]
#define SEMTREX_MATCH_SIBLINGS_COUNT G_contexts[SYS_CONTEXT].symbols[SEMTREX_MATCH_SIBLINGS_COUNT_ID]
#define ASCII_CHAR G_contexts[SYS_CONTEXT].symbols[ASCII_CHAR_ID]
#define ASCII_CHARS G_contexts[SYS_CONTEXT].symbols[ASCII_CHARS_ID]
#define RECEPTOR_XADDR G_contexts[SYS_CONTEXT].symbols[RECEPTOR_XADDR_ID]
#define FLUX G_contexts[SYS_CONTEXT].symbols[FLUX_ID]
#define SCAPE_SPEC G_contexts[SYS_CONTEXT].symbols[SCAPE_SPEC_ID]
#define ASPECTS G_contexts[SYS_CONTEXT].symbols[ASPECTS_ID]
#define ASPECT_DEF G_contexts[SYS_CONTEXT].symbols[ASPECT_DEF_ID]
#define ASPECT_TYPE G_contexts[SYS_CONTEXT].symbols[ASPECT_TYPE_ID]
#define CARRIER G_contexts[SYS_CONTEXT].symbols[CARRIER_ID]
#define ASPECT G_contexts[SYS_CONTEXT].symbols[ASPECT_ID]
#define SIGNALS G_contexts[SYS_CONTEXT].symbols[SIGNALS_ID]
#define SIGNAL G_contexts[SYS_CONTEXT].symbols[SIGNAL_ID]
#define ENVELOPE G_contexts[SYS_CONTEXT].symbols[ENVELOPE_ID]
#define BODY G_contexts[SYS_CONTEXT].symbols[BODY_ID]
#define LISTENERS G_contexts[SYS_CONTEXT].symbols[LISTENERS_ID]
#define LISTENER G_contexts[SYS_CONTEXT].symbols[LISTENER_ID]
#define EXPECTATION G_contexts[SYS_CONTEXT].symbols[EXPECTATION_ID]
#define ACTION G_contexts[SYS_CONTEXT].symbols[ACTION_ID]
#define INTERPOLATE_SYMBOL G_contexts[SYS_CONTEXT].symbols[INTERPOLATE_SYMBOL_ID]
#define PROCESSES G_contexts[SYS_CONTEXT].symbols[PROCESSES_ID]
#define PROCESS_CODING G_contexts[SYS_CONTEXT].symbols[PROCESS_CODING_ID]
#define PROCESS_NAME G_contexts[SYS_CONTEXT].symbols[PROCESS_NAME_ID]
#define PROCESS_INTENTION G_contexts[SYS_CONTEXT].symbols[PROCESS_INTENTION_ID]
#define INPUT G_contexts[SYS_CONTEXT].symbols[INPUT_ID]
#define INPUT_SIGNATURE G_contexts[SYS_CONTEXT].symbols[INPUT_SIGNATURE_ID]
#define INPUT_LABEL G_contexts[SYS_CONTEXT].symbols[INPUT_LABEL_ID]
#define SIGNATURE_STRUCTURE G_contexts[SYS_CONTEXT].symbols[SIGNATURE_STRUCTURE_ID]
#define OUTPUT_SIGNATURE G_contexts[SYS_CONTEXT].symbols[OUTPUT_SIGNATURE_ID]
#define RUN_TREE G_contexts[SYS_CONTEXT].symbols[RUN_TREE_ID]
#define PARAM_REF G_contexts[SYS_CONTEXT].symbols[PARAM_REF_ID]
#define PARAMS G_contexts[SYS_CONTEXT].symbols[PARAMS_ID]
#define RESULT_SYMBOL G_contexts[SYS_CONTEXT].symbols[RESULT_SYMBOL_ID]
#define REDUCTION_ERROR_SYMBOL G_contexts[SYS_CONTEXT].symbols[REDUCTION_ERROR_SYMBOL_ID]
#define PROTOCOLS G_contexts[SYS_CONTEXT].symbols[PROTOCOLS_ID]
#define SEQUENCES G_contexts[SYS_CONTEXT].symbols[SEQUENCES_ID]
#define STEP_SYMBOL G_contexts[SYS_CONTEXT].symbols[STEP_SYMBOL_ID]
#define STEPS G_contexts[SYS_CONTEXT].symbols[STEPS_ID]
#define INTERACTIONS G_contexts[SYS_CONTEXT].symbols[INTERACTIONS_ID]
#define INTERACTION G_contexts[SYS_CONTEXT].symbols[INTERACTION_ID]
#define STEP G_contexts[SYS_CONTEXT].symbols[STEP_ID]
#define RESPONSE_STEPS G_contexts[SYS_CONTEXT].symbols[RESPONSE_STEPS_ID]
#define SCAPES G_contexts[SYS_CONTEXT].symbols[SCAPES_ID]
#define VM_HOST_RECEPTOR G_contexts[SYS_CONTEXT].symbols[VM_HOST_RECEPTOR_ID]
#define CLOCK_RECEPTOR G_contexts[SYS_CONTEXT].symbols[CLOCK_RECEPTOR_ID]
#define COMPOSITORY G_contexts[SYS_CONTEXT].symbols[COMPOSITORY_ID]
#define MANIFEST G_contexts[SYS_CONTEXT].symbols[MANIFEST_ID]
#define MANIFEST_PAIR G_contexts[SYS_CONTEXT].symbols[MANIFEST_PAIR_ID]
#define MANIFEST_LABEL G_contexts[SYS_CONTEXT].symbols[MANIFEST_LABEL_ID]
#define MANIFEST_SPEC G_contexts[SYS_CONTEXT].symbols[MANIFEST_SPEC_ID]
#define RECEPTOR_PACKAGE G_contexts[SYS_CONTEXT].symbols[RECEPTOR_PACKAGE_ID]
#define RECEPTOR_IDENTIFIER G_contexts[SYS_CONTEXT].symbols[RECEPTOR_IDENTIFIER_ID]
#define INSTALLED_RECEPTOR G_contexts[SYS_CONTEXT].symbols[INSTALLED_RECEPTOR_ID]
#define ACTIVE_RECEPTORS G_contexts[SYS_CONTEXT].symbols[ACTIVE_RECEPTORS_ID]
#define PENDING_SIGNALS G_contexts[SYS_CONTEXT].symbols[PENDING_SIGNALS_ID]
#define BINDINGS G_contexts[SYS_CONTEXT].symbols[BINDINGS_ID]
#define BINDING_PAIR G_contexts[SYS_CONTEXT].symbols[BINDING_PAIR_ID]
#define YEAR G_contexts[SYS_CONTEXT].symbols[YEAR_ID]
#define MONTH G_contexts[SYS_CONTEXT].symbols[MONTH_ID]
#define DAY G_contexts[SYS_CONTEXT].symbols[DAY_ID]
#define HOUR G_contexts[SYS_CONTEXT].symbols[HOUR_ID]
#define MINUTE G_contexts[SYS_CONTEXT].symbols[MINUTE_ID]
#define SECOND G_contexts[SYS_CONTEXT].symbols[SECOND_ID]
#define TODAY G_contexts[SYS_CONTEXT].symbols[TODAY_ID]
#define NOW G_contexts[SYS_CONTEXT].symbols[NOW_ID]
#define TICK G_contexts[SYS_CONTEXT].symbols[TICK_ID]
#define ERROR_LOCATION G_contexts[SYS_CONTEXT].symbols[ERROR_LOCATION_ID]
#define ZERO_DIVIDE_ERR G_contexts[SYS_CONTEXT].symbols[ZERO_DIVIDE_ERR_ID]
#define TOO_FEW_PARAMS_ERR G_contexts[SYS_CONTEXT].symbols[TOO_FEW_PARAMS_ERR_ID]
#define TOO_MANY_PARAMS_ERR G_contexts[SYS_CONTEXT].symbols[TOO_MANY_PARAMS_ERR_ID]
#define SIGNATURE_MISMATCH_ERR G_contexts[SYS_CONTEXT].symbols[SIGNATURE_MISMATCH_ERR_ID]
#define NOT_A_PROCESS_ERR G_contexts[SYS_CONTEXT].symbols[NOT_A_PROCESS_ERR_ID]
#define NOT_IN_SIGNAL_CONTEXT_ERR G_contexts[SYS_CONTEXT].symbols[NOT_IN_SIGNAL_CONTEXT_ERR_ID]
#define INCOMPATIBLE_TYPE_ERR G_contexts[SYS_CONTEXT].symbols[INCOMPATIBLE_TYPE_ERR_ID]
#define UNIX_ERRNO_ERR G_contexts[SYS_CONTEXT].symbols[UNIX_ERRNO_ERR_ID]
#define STX_TOKENS G_contexts[SYS_CONTEXT].symbols[STX_TOKENS_ID]
#define STX_SL G_contexts[SYS_CONTEXT].symbols[STX_SL_ID]
#define STX_OP G_contexts[SYS_CONTEXT].symbols[STX_OP_ID]
#define STX_CP G_contexts[SYS_CONTEXT].symbols[STX_CP_ID]
#define STX_SET G_contexts[SYS_CONTEXT].symbols[STX_SET_ID]
#define STX_OS G_contexts[SYS_CONTEXT].symbols[STX_OS_ID]
#define STX_CS G_contexts[SYS_CONTEXT].symbols[STX_CS_ID]
#define STX_LABEL G_contexts[SYS_CONTEXT].symbols[STX_LABEL_ID]
#define STX_OG G_contexts[SYS_CONTEXT].symbols[STX_OG_ID]
#define STX_CG G_contexts[SYS_CONTEXT].symbols[STX_CG_ID]
#define STX_EQ G_contexts[SYS_CONTEXT].symbols[STX_EQ_ID]
#define STX_NEQ G_contexts[SYS_CONTEXT].symbols[STX_NEQ_ID]
#define STX_WALK G_contexts[SYS_CONTEXT].symbols[STX_WALK_ID]
#define STX_STAR G_contexts[SYS_CONTEXT].symbols[STX_STAR_ID]
#define STX_PLUS G_contexts[SYS_CONTEXT].symbols[STX_PLUS_ID]
#define STX_Q G_contexts[SYS_CONTEXT].symbols[STX_Q_ID]
#define STX_OR G_contexts[SYS_CONTEXT].symbols[STX_OR_ID]
#define STX_COMMA G_contexts[SYS_CONTEXT].symbols[STX_COMMA_ID]
#define STX_EXCEPT G_contexts[SYS_CONTEXT].symbols[STX_EXCEPT_ID]
#define STX_NOT G_contexts[SYS_CONTEXT].symbols[STX_NOT_ID]
#define STX_VAL_S G_contexts[SYS_CONTEXT].symbols[STX_VAL_S_ID]
#define STX_VAL_C G_contexts[SYS_CONTEXT].symbols[STX_VAL_C_ID]
#define STX_VAL_I G_contexts[SYS_CONTEXT].symbols[STX_VAL_I_ID]
#define STX_VAL_F G_contexts[SYS_CONTEXT].symbols[STX_VAL_F_ID]
#define STX_SIBS G_contexts[SYS_CONTEXT].symbols[STX_SIBS_ID]
#define STX_CHILD G_contexts[SYS_CONTEXT].symbols[STX_CHILD_ID]
#define STX_POSTFIX G_contexts[SYS_CONTEXT].symbols[STX_POSTFIX_ID]
#define TREE_DELTA_PATH G_contexts[SYS_CONTEXT].symbols[TREE_DELTA_PATH_ID]
#define TREE_DELTA_VALUE G_contexts[SYS_CONTEXT].symbols[TREE_DELTA_VALUE_ID]
#define TREE_DELTA_COUNT G_contexts[SYS_CONTEXT].symbols[TREE_DELTA_COUNT_ID]
#define TREE_DELTA_ADD G_contexts[SYS_CONTEXT].symbols[TREE_DELTA_ADD_ID]
#define TREE_DELTA_REPLACE G_contexts[SYS_CONTEXT].symbols[TREE_DELTA_REPLACE_ID]
enum SYSStructureIDs {
    NULL_STRUCTURE_ID,
    BIT_ID,
    INTEGER_ID,
    FLOAT_ID,
    CHAR_ID,
    CSTRING_ID,
    SYMBOL_ID,
    ENUM_ID,
    TREE_PATH_ID,
    XADDR_ID,
    LIST_ID,
    SURFACE_ID,
    TREE_ID,
    RECEPTOR_ID,
    PROCESS_ID,
    STRUCTURE_ID,
    SCAPE_ID,
    SEMTREX_ID,
    STREAM_ID,
    SEQUENCE_ID,
    PROTOCOL_STEP_ID,
    PROTOCOL_ID,
    DATE_ID,
    TIME_ID,
    TIMESTAMP_ID,
    REDUCTION_ERROR_ID,
    TREE_DELTA_ID,
    NUM_SYS_STRUCTURES
};
#define BIT G_contexts[SYS_CONTEXT].structures[BIT_ID]
#define INTEGER G_contexts[SYS_CONTEXT].structures[INTEGER_ID]
#define FLOAT G_contexts[SYS_CONTEXT].structures[FLOAT_ID]
#define CHAR G_contexts[SYS_CONTEXT].structures[CHAR_ID]
#define CSTRING G_contexts[SYS_CONTEXT].structures[CSTRING_ID]
#define SYMBOL G_contexts[SYS_CONTEXT].structures[SYMBOL_ID]
#define ENUM G_contexts[SYS_CONTEXT].structures[ENUM_ID]
#define TREE_PATH G_contexts[SYS_CONTEXT].structures[TREE_PATH_ID]
#define XADDR G_contexts[SYS_CONTEXT].structures[XADDR_ID]
#define LIST G_contexts[SYS_CONTEXT].structures[LIST_ID]
#define SURFACE G_contexts[SYS_CONTEXT].structures[SURFACE_ID]
#define TREE G_contexts[SYS_CONTEXT].structures[TREE_ID]
#define RECEPTOR G_contexts[SYS_CONTEXT].structures[RECEPTOR_ID]
#define PROCESS G_contexts[SYS_CONTEXT].structures[PROCESS_ID]
#define STRUCTURE G_contexts[SYS_CONTEXT].structures[STRUCTURE_ID]
#define SCAPE G_contexts[SYS_CONTEXT].structures[SCAPE_ID]
#define SEMTREX G_contexts[SYS_CONTEXT].structures[SEMTREX_ID]
#define STREAM G_contexts[SYS_CONTEXT].structures[STREAM_ID]
#define SEQUENCE G_contexts[SYS_CONTEXT].structures[SEQUENCE_ID]
#define PROTOCOL_STEP G_contexts[SYS_CONTEXT].structures[PROTOCOL_STEP_ID]
#define PROTOCOL G_contexts[SYS_CONTEXT].structures[PROTOCOL_ID]
#define DATE G_contexts[SYS_CONTEXT].structures[DATE_ID]
#define TIME G_contexts[SYS_CONTEXT].structures[TIME_ID]
#define TIMESTAMP G_contexts[SYS_CONTEXT].structures[TIMESTAMP_ID]
#define REDUCTION_ERROR G_contexts[SYS_CONTEXT].structures[REDUCTION_ERROR_ID]
#define TREE_DELTA G_contexts[SYS_CONTEXT].structures[TREE_DELTA_ID]
enum SYSProcessIDs {
    NULL_PROCESS_ID,
    NOOP_ID,
    IF_ID,
    ADD_INT_ID,
    SUB_INT_ID,
    MULT_INT_ID,
    DIV_INT_ID,
    MOD_INT_ID,
    EQ_INT_ID,
    LT_INT_ID,
    GT_INT_ID,
    LTE_INT_ID,
    GTE_INT_ID,
    CONCAT_STR_ID,
    RESPOND_ID,
    SEND_ID,
    EXPECT_ACT_ID,
    QUOTE_ID,
    INTERPOLATE_FROM_MATCH_ID,
    RAISE_ID,
    STREAM_READ_ID,
    STREAM_WRITE_ID,
    STREAM_AVAILABLE_ID,
    REPLICATE_ID,
    NUM_SYS_PROCESSES
};
#define NOOP G_contexts[SYS_CONTEXT].processes[NOOP_ID]
#define IF G_contexts[SYS_CONTEXT].processes[IF_ID]
#define ADD_INT G_contexts[SYS_CONTEXT].processes[ADD_INT_ID]
#define SUB_INT G_contexts[SYS_CONTEXT].processes[SUB_INT_ID]
#define MULT_INT G_contexts[SYS_CONTEXT].processes[MULT_INT_ID]
#define DIV_INT G_contexts[SYS_CONTEXT].processes[DIV_INT_ID]
#define MOD_INT G_contexts[SYS_CONTEXT].processes[MOD_INT_ID]
#define EQ_INT G_contexts[SYS_CONTEXT].processes[EQ_INT_ID]
#define LT_INT G_contexts[SYS_CONTEXT].processes[LT_INT_ID]
#define GT_INT G_contexts[SYS_CONTEXT].processes[GT_INT_ID]
#define LTE_INT G_contexts[SYS_CONTEXT].processes[LTE_INT_ID]
#define GTE_INT G_contexts[SYS_CONTEXT].processes[GTE_INT_ID]
#define CONCAT_STR G_contexts[SYS_CONTEXT].processes[CONCAT_STR_ID]
#define RESPOND G_contexts[SYS_CONTEXT].processes[RESPOND_ID]
#define SEND G_contexts[SYS_CONTEXT].processes[SEND_ID]
#define EXPECT_ACT G_contexts[SYS_CONTEXT].processes[EXPECT_ACT_ID]
#define QUOTE G_contexts[SYS_CONTEXT].processes[QUOTE_ID]
#define INTERPOLATE_FROM_MATCH G_contexts[SYS_CONTEXT].processes[INTERPOLATE_FROM_MATCH_ID]
#define RAISE G_contexts[SYS_CONTEXT].processes[RAISE_ID]
#define STREAM_READ G_contexts[SYS_CONTEXT].processes[STREAM_READ_ID]
#define STREAM_WRITE G_contexts[SYS_CONTEXT].processes[STREAM_WRITE_ID]
#define STREAM_AVAILABLE G_contexts[SYS_CONTEXT].processes[STREAM_AVAILABLE_ID]
#define REPLICATE G_contexts[SYS_CONTEXT].processes[REPLICATE_ID]
enum TESTSymbolIDs {
    NULL_TEST_SYMBOL_ID,
    TEST_INT_SYMBOL_ID,
    TEST_INT_SYMBOL2_ID,
    TEST_FLOAT_SYMBOL_ID,
    TEST_STR_SYMBOL_ID,
    TEST_TREE_SYMBOL_ID,
    TEST_TREE_SYMBOL2_ID,
    TEST_STREAM_SYMBOL_ID,
    TEST_NAME_SYMBOL_ID,
    TEST_RECEPTOR_SYMBOL_ID,
    TEST_ALPHABETIZE_SCAPE_SYMBOL_ID,
    NUM_TEST_SYMBOLS
};
#define TEST_INT_SYMBOL G_contexts[TEST_CONTEXT].symbols[TEST_INT_SYMBOL_ID]
#define TEST_INT_SYMBOL2 G_contexts[TEST_CONTEXT].symbols[TEST_INT_SYMBOL2_ID]
#define TEST_FLOAT_SYMBOL G_contexts[TEST_CONTEXT].symbols[TEST_FLOAT_SYMBOL_ID]
#define TEST_STR_SYMBOL G_contexts[TEST_CONTEXT].symbols[TEST_STR_SYMBOL_ID]
#define TEST_TREE_SYMBOL G_contexts[TEST_CONTEXT].symbols[TEST_TREE_SYMBOL_ID]
#define TEST_TREE_SYMBOL2 G_contexts[TEST_CONTEXT].symbols[TEST_TREE_SYMBOL2_ID]
#define TEST_STREAM_SYMBOL G_contexts[TEST_CONTEXT].symbols[TEST_STREAM_SYMBOL_ID]
#define TEST_NAME_SYMBOL G_contexts[TEST_CONTEXT].symbols[TEST_NAME_SYMBOL_ID]
#define TEST_RECEPTOR_SYMBOL G_contexts[TEST_CONTEXT].symbols[TEST_RECEPTOR_SYMBOL_ID]
#define TEST_ALPHABETIZE_SCAPE_SYMBOL G_contexts[TEST_CONTEXT].symbols[TEST_ALPHABETIZE_SCAPE_SYMBOL_ID]

#endif
